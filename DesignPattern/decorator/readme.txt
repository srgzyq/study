装饰者模式:动态地将责任附加到对象上。若要扩展功能，装饰者提供比继承更有弹性的方案。

装饰者和被装饰者，咖啡为列子，拿一个深焙咖啡为对象，以摩卡对象装饰，以奶泡对象装饰，调用cost()方法，将从奶泡对象注入的摩卡对象的cost获取，然后对注入摩卡对象的深焙对象的cost获取，重里面到外面的相加。

这种感觉有点递归，没有注入装饰，然后一一获取。

说实话，这种模式设计，在自己的设计上是很少用，因为后面方向，注入多少都分不清楚。
